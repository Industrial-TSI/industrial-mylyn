<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.industrialtsi.mylyn.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.industrialtsi.mylyn.core" id="persistor" name="persistor"/>
      </appInfo>
      <documentation>
         [Enter description of this extension point.]
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="persistor" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="persistor-config" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="persistor">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.industrialtsi.mylyn.core.persistence.PersistorAdapter:"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="repository-attributes">
      <annotation>
         <documentation>
            Use this to describe the ability of the connector to perform operations on the repository. Default for all operations is OFF.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="can-create-new-task" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can create new tasks, may be be false for workflow reasons.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-create-task-from-key" type="boolean" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-query-repository" type="boolean" use="required">
            <annotation>
               <documentation>
                  The repositorry can be queried using the UI.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-synchronize-tasks" type="boolean" use="required">
            <annotation>
               <documentation>
                  Tasks can be edited and synchronized.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-get-attachments" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can retrieve attachments
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-post-attachments" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can post attachments.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-initialize-schema" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can create the schema in a non-prexisting repository.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-delete-tasks" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can delete tasks from repository.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-delete-comments" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can delete comments from repository.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="can-delete-attachments" type="boolean" use="required">
            <annotation>
               <documentation>
                  Can delete attachments from repository.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="task-attributes">
      <annotation>
         <documentation>
            Use this to describe the ability of the connector to perform operations on  a specific task attribute.
Default for all task attributes is readonly.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="task.common.summary" use="required">
            <annotation>
               <documentation>
                  Can the summary field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.product" use="required">
            <annotation>
               <documentation>
                  Can the product field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.status" use="required">
            <annotation>
               <documentation>
                  Can the status field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.user.assigned" use="required">
            <annotation>
               <documentation>
                  Can the owner field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.date.due" use="required">
            <annotation>
               <documentation>
                  Can the due date field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.date.created" use="required">
            <annotation>
               <documentation>
                  Can the date created field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.date.modified" use="required">
            <annotation>
               <documentation>
                  Can the due modified field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.priority" use="required">
            <annotation>
               <documentation>
                  Can the priority field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.description" use="required">
            <annotation>
               <documentation>
                  Can the description field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="task.common.reporter" use="required">
            <annotation>
               <documentation>
                  Can the reporter field be edited? Default is NO.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="readonly">
                  </enumeration>
                  <enumeration value="readwrite">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>

   <element name="persistor-config">
      <annotation>
         <documentation>
            Match a persistor class to one or more ibatis-configs or independent implementations.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="repository-attributes"/>
            <element ref="task-attributes"/>
            <element ref="ibatis-config" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  THe label in the first popup.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="persistor" type="string" use="required">
            <annotation>
               <documentation>
                  The persistor class to use. Extending an adapter provides more room for future expansion than implementing an interface.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.industrialtsi.mylyn.core.persistence.PersistorAdapter:"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="jdbc-url-template" type="string">
            <annotation>
               <documentation>
                  This string is entered as a hint into the JDBC URL field.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="jdbc-url-re" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="ibatis-config">
      <complexType>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The label in the second popup
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="driver" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="maps" type="string" use="required">
            <annotation>
               <documentation>
                  Location of the relevant SqlMaps files
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="username" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="password" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
